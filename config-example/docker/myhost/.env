# Host-specific Docker Compose environment variables

### Storage - Located on main node

STORAGE_ALL=/mnt
STORAGE_LOCAL=/mnt/local/storage
STORAGE_LOCAL_MEDIA=${STORAGE_LOCAL}/media
STORAGE_CALIBRE_LIBRARY=${STORAGE_LOCAL_MEDIA}/books
STORAGE_CALIBRE_LIBRARY_HUN=${STORAGE_LOCAL_MEDIA}/books-hun
STORAGE_WEBDAV=${STORAGE_LOCAL_MEDIA}/webdav
STORAGE_KIWIX=${STORAGE_LOCAL_MEDIA}/kiwix
STORAGE_OBSIDIAN=${STORAGE_LOCAL_MEDIA}/obsidian

DOCKER_VOLUMES=${STORAGE_LOCAL}/docker-volumes

BEES_BTRFS_UUID=96c03041-7dde-48b4-8cc1-3f72e18e1bd2
BEES_DB_SIZE=1073741824 # 1 GiB

### Storage - Located on NAS

STORAGE_NAS=/mnt/nas
STORAGE_DOWNLOADS=${STORAGE_NAS}/downloads
STORAGE_TORRENT_DOWNLOADS=${STORAGE_NAS}/downloads/torrent-downloads
STORAGE_SYNCTHING=${STORAGE_NAS}/family-media/syncthing
STORAGE_MEDIA=${STORAGE_NAS}/media
STORAGE_FAMILYMEDIA=${STORAGE_NAS}/family-media
STORAGE_BACKUP_ON_NAS=${STORAGE_NAS}/backup

### Hosts

LOCAL_NODE_IP=192.168.1.20

### For Homepage

LOCATION_CITY=Greenwich
LOCATION_LATITUDE=51.48
LOCATION_LONGITUDE=0.00

### Local accounts

ADGUARDHOME_USERNAME="use-some-very-secure-value-here"
ADGUARDHOME_PASSWORD="use-some-very-secure-value-here"

KOPIA_B2_REPOSITORY_PASSWORD="use-some-very-secure-value-here"
KOPIA_NAS_REPOSITORY_PASSWORD="use-some-very-secure-value-here"

# In order to generate an API key, please follow the steps outlined here: https://docs.portainer.io/api/access
PORTAINER_API_KEY="use-some-very-secure-value-here"

# You can create an API key from inside Jellyfin at Settings > Advanced > API Keys
JELLYFIN_API_KEY="use-some-very-secure-value-here"

AUTHELIA_JWT_SECRET="use-some-very-secure-value-here"
AUTHELIA_SESSION_SECRET="use-some-very-secure-value-here"
AUTHELIA_STORAGE_ENCRYPTION_KEY="use-some-very-secure-value-here"

# Generate password hash for ADMIN_USER with:
#   docker run authelia/authelia:latest authelia hash-password 'yourpassword'
# Important: escape all '$' characters, like: '\$'
AUTHELIA_ADMIN_PASSWORD="use-some-very-secure-value-here"

# Generate key within the crowdsec container: cscli bouncers add traefik-bouncer
CROWDSEC_BOUNCER_API_KEY="use-some-very-secure-value-here"

# Use a local account that has at least read privileges. Local account can be created on the Legacy Interface.
# To temporally switch to the old interface: Settings -> System -> Legacy Interface -> Enable
# Then create the user on Settings -> Admins
UNIFI_LOCAL_VIEWONLY_USERNAME="use-some-very-secure-value-here"
UNIFI_LOCAL_VIEWONLY_PASSWORD="use-some-very-secure-value-here"

# Generate a secure random key (min 32 chars) using: `openssl rand -base64 32`
OPEN_WEBUI_SECRET_KEY="use-some-very-secure-value-here"

# Any random string
SEARXNG_SECRET="use-some-very-secure-value-here"

# Any random string
QDRANT_API_KEY="use-some-very-secure-value-here"

N8N_ENCRYPTION_KEY="use-some-very-secure-value-here"
N8N_USER_MANAGEMENT_JWT_SECRET="use-some-very-secure-value-here"

N8N_POSTGRES_USER="root"
N8N_POSTGRES_PASSWORD="use-some-very-secure-value-here"
N8N_POSTGRES_DB="n8n"

COUCHDB_USER="admin"
COUCHDB_PASSWORD="use-some-very-secure-value-here"

# Used in docs/tools/obsidian-livesync/generate-setupuri.sh
OBSIDIAN_LIVESYNC_DATABASE_NAME="obsidian"
OBSIDIAN_LIVESYNC_PASSPHRASE="use-some-very-secure-value-here"

# Optional Obsidian container authentication
# OBSIDIAN_CUSTOM_USER="user"
# OBSIDIAN_PASSWORD="use-some-very-secure-value-here"
# OBSIDIAN_LC_ALL="en_US.UTF-8"

### Cloud accounts

CLOUDFLARE_DNS_API_TOKEN="use-some-very-secure-value-here"
CLOUDFLARE_TUNNEL_TOKEN="use-some-very-secure-value-here"

# https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY="use-some-very-secure-value-here"

# https://platform.openai.com/settings/organization/api-keys
OPENAI_API_KEY="use-some-very-secure-value-here"

# https://aistudio.google.com/apikey
GEMINI_API_KEY="use-some-very-secure-value-here"

# https://openrouter.ai/settings/keys
OPENROUTER_API_KEY="use-some-very-secure-value-here"
