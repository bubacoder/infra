version: "3.5"
services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
      - OVH_ENDPOINT=${OVH_ENDPOINT}
      - OVH_APPLICATION_KEY=${OVH_APPLICATION_KEY}
      - OVH_APPLICATION_SECRET=${OVH_APPLICATION_SECRET}
      - OVH_CONSUMER_KEY=${OVH_CONSUMER_KEY}
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik/
      - ${CONTAINERDATA}/traefik/logs:/logs
      - ${CONTAINERDATA}/traefik/letsencrypt:/letsencrypt
    ports:
      - 980:80 # HTTP
      - 9443:443 # HTTPS
      - 981:8080 # API MGMT UI (enabled by --api.insecure=true)
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`traefik.${MYDOMAIN}`) # Define the subdomain for the traefik dashboard.
      - traefik.http.routers.api.service=api@internal # Enable Traefik API.
      # - traefik.http.routers.api.middlewares=local-ipwhitelist@file # only allow access from private class subnets
      # - traefik.http.routers.api.middlewares=basic-auth-global # enable basic auth middleware
      # - traefik.http.middlewares.basic-auth-global.basicauth.users=admin:$$apr1$$epoKf5li$$QfTMJZOCS/halv3CiIUEu0 # protect the traefik dashboard by basic auth (pw=password)

networks:
  proxy:
    external: true