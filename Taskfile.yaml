# https://taskfile.dev/ - Task is a task runner / build tool that aims to be simpler and easier to use than, for example, GNU Make.
# [Say Goodbye to Makefile - Use Taskfile to Manage Tasks in CI/CD Pipelines and Locally](https://www.youtube.com/watch?v=Z7EnwBaJzCk)
# Installed via the `debian_developer` Ansible role.

version: '3'

includes:
  docker: ./docker/Taskfile.docker.yaml
  docs: ./docs/web/Taskfile.web.yaml
  devcontainer: ./.devcontainer/Taskfile.dev.yaml
  crowdsec: ./docker/stacks/security/Taskfile.crowdsec.yaml

tasks:
  default:
    desc: List all tasks
    cmds:
      - task --list-all

  # TaskUI is a lightweight terminal user interface for executing tasks defined using taskfile.dev.
  # https://github.com/thmshmm/taskui
  ui:
    desc: Open terminal user interface for executing tasks (TaskUI)
    env:
      TASKUI_HIGHLIGHT_STYLE_BG: "#00cc66"
      TASKUI_HIGHLIGHT_STYLE_FG: "#4c4f69"
    cmds:
      - taskui

  ### Development-related tasks

  # See https://pre-commit.com for more information
  lint:
    desc: Run linting tools (via pre-commit)
    cmds:
      - pre-commit run --all-files

  create-example-env:
    desc: Create/update Docker example environment files
    dotenv: ['docker/hosts/.env']
    cmds:
      - scripts/create-example-env.py docker/hosts/.env > docker/hosts/.env.example
      - scripts/create-example-env.py docker/hosts/${MAIN_NODE}/.env > docker/hosts/example/.env
    sources:
      - docker/hosts/.env
      - docker/hosts/${MAIN_NODE}/.env
    generates:
      - docker/hosts/.env.example
      - docker/hosts/example/.env

  git-rebase-fixup:
    desc: Interactively rebase current branch to origin (stash, rebase, pop)
    cmds:
      - git stash
      - GIT_SEQUENCE_EDITOR=scripts/git-rebase-fixup.py git rebase -i origin/$(git branch --show-current)
      - git stash pop

  build:
    desc: Run all linting and build tasks
    cmds:
      - task: create-example-env
      - task: docs-deploy
      - task: pre-commit-update
      - task: lint

  pre-commit-update:
    desc: Update pre-commit repositories
    cmds:
      - pre-commit autoupdate

  star-github-repos:
    desc: Add star to all referenced GitHub repos
    dotenv: ['docker/hosts/.env']
    preconditions:
      - sh: "[ ! -z \"${GITHUB_API_TOKEN}\" ]"
        msg: GITHUB_API_TOKEN environment variable must be set (exported)
    cmds:
      - scripts/github-extract-links.py . | sort | uniq | scripts/github-star-repo.py`

  ### Operations-related tasks

  docker-command:
    internal: true
    cmds:
      - cd "docker/hosts/$(hostname | tr '[:upper:]' '[:lower:]')" && bash -c "source ../../common.sh; {{.COMMAND}} {{.STACK}} {{.SERVICE}}"

  get-public-ip:
    desc: Display public IP (ipinfo.io)
    cmds:
      - curl -s https://ipinfo.io/ip

  versions:
    desc: Show software version numbers
    cmds:
      - lsb_release -a
      - uname -a
      - ansible --version
      - terraform --version
      # - docker --version

  ansible-apply-homelab:
    desc: Run 'homelab' Ansible playbook
    cmds:
      - ansible/apply-homelab.sh

  ansible-apply-cloud:
    desc: Run 'cloud' Ansible playbook
    cmds:
      - ansible/apply-cloud.sh
