version: '3'

tasks:
  command:
    internal: true
    cmds:
      - docker/labctl.py docker/labctl.py service {{.COMMAND}} {{.SERVICE}}

  apply:
    desc: Deploy locally configured containers
    cmds:
      - docker/labctl.py config apply

  update:
    desc: Update and restart containers
    cmds:
      - docker/labctl.py config apply --mode=update

  pull:
    desc: Pull container images
    cmds:
      - docker/labctl.py config apply --mode=pull

  pull-update:
    desc: Pull, update and restart containers, then show restarts
    cmds:
      - task: pull
      - task: update
      - task: show-restarts

  stop:
    desc: Stop configured containers
    cmds:
      - docker/labctl.py config apply --mode=down

  stop-all:
    desc: Stop all running containers
    cmds:
      - docker stop $(docker ps -a -q)

  prune:
    desc: Remove unused and dangling images
    cmds:
      - docker image prune --all --force --filter "until=504h"

  show-restarts:
    desc: Show restarting containers and restart events
    cmds:
      - docker container list --filter status=restarting
      - docker events --filter event=restart --since=60m

  # Note: Escape {{ .. }} in Go templates: {{` {{ .. }} `}}
  show-big-images:
    desc: List the largest container images
    cmds:
      - docker images --format "{{`{{.ID}}\t{{.Size}}\t{{.Repository}}:{{.Tag}}`}}" | sort -k 2 -h -r | head -n 25

  # `docker system df -v` and `ncdu` is also useful
  du:
    desc: Show docker disk usage
    cmds:
      - sudo du -x -h --max-depth=1 /var/lib/docker

  check-updates:
    desc: Run Watchtower to get updated container images
    cmds:
      - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once --cleanup --monitor-only

  create-example-env:
    desc: Create/update Docker example environment files
    dotenv: ['config/docker/.env']
    cmds:
      - scripts/create-example-env.py config/docker/.env > config-example/docker/.env
      - scripts/create-example-env.py config/docker/${MAIN_NODE}/.env > config-example/docker/myhost/.env
      - cat config/docker/${MAIN_NODE}/services.yaml | sed "s/${MAIN_NODE}/myhost/g" > config-example/docker/myhost/services.yaml
    sources:
      - config/docker/**/.env
      - config/docker/**/services.yaml
    generates:
      - config-example/docker/.env
      - config-example/docker/myhost/.env
      - config-example/docker/myhost/services.yaml
