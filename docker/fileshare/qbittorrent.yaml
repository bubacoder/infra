# The qBittorrent project aims to provide an open-source software alternative to ¬µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.
# The default username/password is `admin` / `adminadmin`.
#
# Recommended setup steps:
# - Configure "Bypass authentication for clients in whitelisted IP subnets" (Settings -> Webui) - Authelia handles the authentication
# - The image is build locally (see: `Dockerfile`) and includes the VueTorrent (https://github.com/WDaan/VueTorrent) web interface. To enable it, point your alternate WebUI location to '/usr/vuetorrent' folder in qBittorrent settings.
# - Configure categories (Settings menu) to specify default download locations
# - Setup forwarding of port 6881 (TCP, UDP) in the router, check open port: https://www.yougetsignal.com/tools/open-ports/
#
# üè† Home: https://www.qbittorrent.org/  
# üì¶ Image: https://hub.docker.com/r/linuxserver/qbittorrent  
---
name: qbittorrent
services:
  qbittorrent:
    build: ./qbittorrent
    container_name: qbittorrent
    restart: unless-stopped
    # network_mode: host
    # hostname: ${MAIN_NODE}
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TIMEZONE}
      WEBUI_PORT: 8080
    volumes:
      - ${DOCKER_VOLUMES}/qbittorrent:/config
      - ${STORAGE_DOWNLOADS}/torrent-downloads:/downloads
      - ${STORAGE_MEDIA}:/media
    # Not needed if 'network_mode: host' is set
    ports:
      - 8080:8080 # Web UI
      - 6881:6881/tcp # Bittorrent incoming connections
      - 6881:6881/udp # Bittorrent incoming connections
    labels:
      traefik.enable: true
      traefik.http.routers.qbittorrent.middlewares: localaccess-sso@file
      traefik.http.services.qbittorrent.loadbalancer.server.port: 8080
      homepage.group: Arr
      homepage.name: qBittorrent
      homepage.icon: qbittorrent.png
      homepage.href: https://qbittorrent.${MYDOMAIN}/
      homepage.description: "[SSO] BitTorrent client" # TODO solve double auth
      com.centurylinklabs.watchtower.enable: false
