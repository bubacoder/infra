# Dynamic configuration - changes in this file are applied without restarting Traefik (https://doc.traefik.io/traefik/providers/file/#watch).
# Configuration via environment variables: use go templating, like {{env "VARIABLENAME"}}

http:

  routers:
    router:
      entryPoints:
        - websecure
      rule: 'Host(`router.{{env "MYDOMAIN"}}`)'
      service: router
      middlewares:
        - "https-local@file"
    proxmox:
      entryPoints:
        - websecure
      rule: 'Host(`proxmox.{{env "MYDOMAIN"}}`)'
      service: proxmox
      middlewares:
        - "https-local@file"
    qbittorrent:
      entryPoints:
        - websecure
      rule: 'Host(`qbittorrent.{{env "MYDOMAIN"}}`)'
      service: qbittorrent
      middlewares:
        - "https-local-auth@file"
    ha:
      entryPoints:
        - websecure
      rule: 'Host(`ha.{{env "MYDOMAIN"}}`)'
      service: ha
      middlewares:
        - "https-local@file"

  services:
    router:
      loadBalancer:
        serversTransport: insecureTransport
        servers:
          - url: http://192.168.1.1:80
    proxmox:
      loadBalancer:
        serversTransport: insecureTransport
        servers:
          - url: https://192.168.1.50:8006
    qbittorrent:
      loadBalancer:
        serversTransport: insecureTransport
        servers:
          - url: http://nas:8080
    ha:
      loadBalancer:
        serversTransport: insecureTransport
        servers:
          - url: http://{{env "MAIN_NODE_IP"}}:8123

  # allow self-signed certificates for proxied web services
  serversTransports:
    insecureTransport:
      insecureSkipVerify: true

  ## MIDDLEWARES ##
  middlewares:
    https-public:
      chain:
        middlewares:
          - https-only
          - crowdsec-bouncer
          # - security-headers

    https-local:
      chain:
        middlewares:
          - https-only
          - local-ip-whitelist

    https-local-auth:
      chain:
        middlewares:
          - https-only
          - local-ip-whitelist
          - authelia

    https-only:
      redirectScheme:
        scheme: https

    # Only Allow Local networks
    local-ip-whitelist:
      ipWhiteList:
        sourceRange:
          - 127.0.0.1/32    # localhost
          - 10.0.0.0/8      # private class A
          - 172.16.0.0/12   # private class B
          - 192.168.0.0/16  # private class C

    authelia:
      forwardAuth:
        address: 'http://authelia:9091/api/verify?rd=https://auth.{{env "MYDOMAIN"}}'
        authResponseHeaders: Remote-User,Remote-Groups,Remote-Name,Remote-Email
        trustForwardHeader: true

    crowdsec-bouncer:
      forwardAuth:
        address: http://bouncer-traefik:8080/api/v1/forwardAuth
        trustForwardHeader: true

    # Security headers
    security-headers:
      headers:
        customResponseHeaders: # field names are case-insensitive
          X-Robots-Tag: "none,noarchive,nosnippet,notranslate,noimageindex"
          Server: "" # prevent version disclosure
          X-Powered-By: "" # prevent version disclosure
          X-Forwarded-Proto: "https"
        sslProxyHeaders:
          X-Forwarded-Proto: "https"
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        contentTypeNosniff: true # X-Content-Type-Options
        customFrameOptionsValue: "SAMEORIGIN" # X-Frame-Options
        browserXssFilter: false # X-XSS-Protection; deprecated
        referrerPolicy: "strict-origin-when-cross-origin" # Referrer-Policy
        forceSTSHeader: true # HTTP-Strict-Transport-Security (HSTS)
        stsIncludeSubdomains: true # HTTP-Strict-Transport-Security (HSTS)
        stsSeconds: 63072000 # HTTP-Strict-Transport-Security (HSTS)
        stsPreload: true # HTTP-Strict-Transport-Security (HSTS)
        #contentSecurityPolicy: "block-all-mixed-content" # Content-Security-Policy (CSP)


# Only use secure ciphers - https://ssl-config.mozilla.org/#server=traefik&version=2.9&config=intermediate&guideline=5.6
tls:
  options:
    default:
      minVersion: VersionTLS12
      cipherSuites:
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
